apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: robot-operator
    control-plane: controller-manager
  name: robot-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: buildmanagers.dev.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: dev.roboscale.io
  names:
    kind: BuildManager
    listKind: BuildManagerList
    plural: buildmanagers
    singular: buildmanager
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BuildManager is the Schema for the buildmanagers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BuildManagerSpec defines the desired state of BuildManager
              properties:
                steps:
                  items:
                    description: Step is a command or script to execute when building a robot. Either `command` or `script` should be specified for each step.
                    properties:
                      command:
                        description: Bash command to run.
                        type: string
                      env:
                        description: Environment variables for step.
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                      name:
                        description: Name of the step.
                        type: string
                      script:
                        description: Bash script to run.
                        type: string
                      selector:
                        additionalProperties:
                          type: string
                        description: Cluster selector.
                        type: object
                      workspace:
                        description: Name of the workspace.
                        type: string
                    required:
                      - name
                      - workspace
                    type: object
                  type: array
              type: object
            status:
              description: BuildManagerStatus defines the observed state of BuildManager
              properties:
                active:
                  type: boolean
                phase:
                  type: string
                scriptConfigMapStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                steps:
                  items:
                    properties:
                      created:
                        type: boolean
                      jobName:
                        type: string
                      jobPhase:
                        type: string
                      step:
                        description: Step is a command or script to execute when building a robot. Either `command` or `script` should be specified for each step.
                        properties:
                          command:
                            description: Bash command to run.
                            type: string
                          env:
                            description: Environment variables for step.
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                                - name
                              type: object
                            type: array
                          name:
                            description: Name of the step.
                            type: string
                          script:
                            description: Bash script to run.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: Cluster selector.
                            type: object
                          workspace:
                            description: Name of the workspace.
                            type: string
                        required:
                          - name
                          - workspace
                        type: object
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: discoveryservers.dev.roboscale.io
spec:
  group: dev.roboscale.io
  names:
    kind: DiscoveryServer
    listKind: DiscoveryServerList
    plural: discoveryservers
    singular: discoveryserver
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: DiscoveryServer is the Schema for the discoveryservers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DiscoveryServerSpec defines the desired state of DiscoveryServer
              properties:
                args:
                  items:
                    type: string
                  type: array
                cluster:
                  type: string
                hostname:
                  type: string
                image:
                  type: string
                reference:
                  description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                subdomain:
                  type: string
                type:
                  type: string
              type: object
            status:
              description: DiscoveryServerStatus defines the observed state of DiscoveryServer
              properties:
                configMapStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                connectionInfo:
                  properties:
                    configMapName:
                      type: string
                    ip:
                      type: string
                  type: object
                phase:
                  type: string
                podStatus:
                  properties:
                    created:
                      type: boolean
                    ip:
                      type: string
                    phase:
                      description: PodPhase is a label for the condition of a pod at the current time.
                      type: string
                  type: object
                serviceExportStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                serviceStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: launchmanagers.dev.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: dev.roboscale.io
  names:
    kind: LaunchManager
    listKind: LaunchManagerList
    plural: launchmanagers
    singular: launchmanager
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: LaunchManager is the Schema for the launchmanagers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: LaunchManagerSpec defines the desired state of LaunchManager
              properties:
                display:
                  description: Display connection.
                  type: boolean
                launch:
                  additionalProperties:
                    description: Launch description of a repository.
                    properties:
                      env:
                        description: Additional environment variables to set when launching ROS nodes.
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                      launchFilePath:
                        description: Path to launchfile in repository. (eg. `linorobot/linorobot_gazebo/launch.py`)
                        type: string
                      namespacing:
                        description: Name of the repository.
                        type: boolean
                      parameters:
                        additionalProperties:
                          type: string
                        description: Launch parameters.
                        type: object
                      prelaunch:
                        description: Command or script to run just before node's execution.
                        properties:
                          command:
                            description: Bash command to run before ROS node execution.
                            type: string
                        required:
                          - command
                        type: object
                      privileged:
                        description: Launch container privilege.
                        type: boolean
                      repository:
                        description: Name of the repository.
                        type: string
                      resources:
                        description: Launch container resource limits.
                        properties:
                          cpu:
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            type: integer
                          memory:
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      selector:
                        additionalProperties:
                          type: string
                        description: Cluster selector.
                        type: object
                      workspace:
                        description: Name of the workspace.
                        type: string
                    required:
                      - launchFilePath
                      - repository
                      - workspace
                    type: object
                  type: object
                run:
                  additionalProperties:
                    description: Run description.
                    properties:
                      env:
                        description: Additional environment variables to set when launching ROS nodes.
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                      executable:
                        description: Executable name in `ros2 run <package> <executable>`.
                        type: string
                      namespacing:
                        description: Name of the repository.
                        type: boolean
                      package:
                        description: Package name in `ros2 run <package> <executable>`.
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        description: Launch parameters.
                        type: object
                      prelaunch:
                        description: Command or script to run just before node's execution.
                        properties:
                          command:
                            description: Bash command to run before ROS node execution.
                            type: string
                        required:
                          - command
                        type: object
                      privileged:
                        description: Launch container privilege.
                        type: boolean
                      resources:
                        description: Launch container resource limits.
                        properties:
                          cpu:
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            type: integer
                          memory:
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      selector:
                        additionalProperties:
                          type: string
                        description: Cluster selector.
                        type: object
                      workspace:
                        description: Name of the workspace.
                        type: string
                    required:
                      - executable
                      - package
                      - workspace
                    type: object
                  type: object
              type: object
            status:
              description: LaunchManagerStatus defines the observed state of LaunchManager
              properties:
                active:
                  type: boolean
                launchPodStatus:
                  properties:
                    created:
                      type: boolean
                    ip:
                      type: string
                    launchStatus:
                      additionalProperties:
                        properties:
                          active:
                            type: boolean
                          containerStatus:
                            description: ContainerStatus contains details for the current status of this container.
                            properties:
                              containerID:
                                description: Container's ID in the format '<type>://<container_id>'.
                                type: string
                              image:
                                description: 'The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.'
                                type: string
                              imageID:
                                description: ImageID of the container's image.
                                type: string
                              lastState:
                                description: Details about the container's last termination condition.
                                properties:
                                  running:
                                    description: Details about a running container
                                    properties:
                                      startedAt:
                                        description: Time at which the container was last (re-)started
                                        format: date-time
                                        type: string
                                    type: object
                                  terminated:
                                    description: Details about a terminated container
                                    properties:
                                      containerID:
                                        description: Container's ID in the format '<type>://<container_id>'
                                        type: string
                                      exitCode:
                                        description: Exit status from the last termination of the container
                                        format: int32
                                        type: integer
                                      finishedAt:
                                        description: Time at which the container last terminated
                                        format: date-time
                                        type: string
                                      message:
                                        description: Message regarding the last termination of the container
                                        type: string
                                      reason:
                                        description: (brief) reason from the last termination of the container
                                        type: string
                                      signal:
                                        description: Signal from the last termination of the container
                                        format: int32
                                        type: integer
                                      startedAt:
                                        description: Time at which previous execution of the container started
                                        format: date-time
                                        type: string
                                    required:
                                      - exitCode
                                    type: object
                                  waiting:
                                    description: Details about a waiting container
                                    properties:
                                      message:
                                        description: Message regarding why the container is not yet running.
                                        type: string
                                      reason:
                                        description: (brief) reason the container is not yet running.
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
                                type: string
                              ready:
                                description: Specifies whether the container has passed its readiness probe.
                                type: boolean
                              restartCount:
                                description: The number of times the container has been restarted.
                                format: int32
                                type: integer
                              started:
                                description: Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.
                                type: boolean
                              state:
                                description: Details about the container's current condition.
                                properties:
                                  running:
                                    description: Details about a running container
                                    properties:
                                      startedAt:
                                        description: Time at which the container was last (re-)started
                                        format: date-time
                                        type: string
                                    type: object
                                  terminated:
                                    description: Details about a terminated container
                                    properties:
                                      containerID:
                                        description: Container's ID in the format '<type>://<container_id>'
                                        type: string
                                      exitCode:
                                        description: Exit status from the last termination of the container
                                        format: int32
                                        type: integer
                                      finishedAt:
                                        description: Time at which the container last terminated
                                        format: date-time
                                        type: string
                                      message:
                                        description: Message regarding the last termination of the container
                                        type: string
                                      reason:
                                        description: (brief) reason from the last termination of the container
                                        type: string
                                      signal:
                                        description: Signal from the last termination of the container
                                        format: int32
                                        type: integer
                                      startedAt:
                                        description: Time at which previous execution of the container started
                                        format: date-time
                                        type: string
                                    required:
                                      - exitCode
                                    type: object
                                  waiting:
                                    description: Details about a waiting container
                                    properties:
                                      message:
                                        description: Message regarding why the container is not yet running.
                                        type: string
                                      reason:
                                        description: (brief) reason the container is not yet running.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - image
                              - imageID
                              - name
                              - ready
                              - restartCount
                            type: object
                        type: object
                      type: object
                    phase:
                      description: PodPhase is a label for the condition of a pod at the current time.
                      type: string
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: metricscollectors.dev.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: dev.roboscale.io
  names:
    kind: MetricsCollector
    listKind: MetricsCollectorList
    plural: metricscollectors
    singular: metricscollector
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MetricsCollector is the Schema for the metricscollectors API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MetricsCollectorSpec defines the desired state of MetricsCollector
              properties:
                cpu:
                  type: boolean
                gpu:
                  type: boolean
                memory:
                  type: boolean
                networkLoad:
                  type: boolean
                waitSeconds:
                  default: 10
                  description: 'TODO: Add default value'
                  format: int64
                  type: integer
              required:
                - cpu
                - gpu
                - memory
                - networkLoad
                - waitSeconds
              type: object
            status:
              description: MetricsCollectorStatus defines the observed state of MetricsCollector
              properties:
                allocatable:
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: ResourceList is a set of (resource name, quantity) pairs.
                  type: object
                componentMetrics:
                  items:
                    properties:
                      containerName:
                        type: string
                      cpuUtilization:
                        properties:
                          corePercentage:
                            type: string
                          hostPercentage:
                            type: string
                          message:
                            type: string
                          value:
                            type: string
                        type: object
                      memoryUtilization:
                        properties:
                          hostPercentage:
                            type: string
                          message:
                            type: string
                          value:
                            type: string
                        type: object
                      message:
                        type: string
                      networkLoadUtilization:
                        properties:
                          interfaces:
                            items:
                              properties:
                                name:
                                  type: string
                                receive:
                                  properties:
                                    load:
                                      type: string
                                    loadKBit:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                transmit:
                                  properties:
                                    load:
                                      type: string
                                    loadKBit:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          message:
                            type: string
                        type: object
                      ownerReference:
                        description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          blockOwnerDeletion:
                            description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                            type: boolean
                          controller:
                            description: If true, this reference points to the managing controller.
                            type: boolean
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                            type: string
                        required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                        type: object
                        x-kubernetes-map-type: atomic
                      podReference:
                        description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  type: array
                lastUpdateTimestamp:
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: robotartifacts.dev.roboscale.io
spec:
  group: dev.roboscale.io
  names:
    kind: RobotArtifact
    listKind: RobotArtifactList
    plural: robotartifacts
    singular: robotartifact
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RobotArtifact is the Schema for the robotartifacts API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            template:
              description: RobotSpec defines the desired state of Robot
              properties:
                buildManagerTemplate:
                  description: Build manager template for initial configuration
                  properties:
                    steps:
                      items:
                        description: Step is a command or script to execute when building a robot. Either `command` or `script` should be specified for each step.
                        properties:
                          command:
                            description: Bash command to run.
                            type: string
                          env:
                            description: Environment variables for step.
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                                - name
                              type: object
                            type: array
                          name:
                            description: Name of the step.
                            type: string
                          script:
                            description: Bash script to run.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: Cluster selector.
                            type: object
                          workspace:
                            description: Name of the workspace.
                            type: string
                        required:
                          - name
                          - workspace
                        type: object
                      type: array
                  type: object
                development:
                  description: Development enabled
                  type: boolean
                discoveryServerTemplate:
                  description: Discovery server template
                  properties:
                    args:
                      items:
                        type: string
                      type: array
                    cluster:
                      type: string
                    hostname:
                      type: string
                    image:
                      type: string
                    reference:
                      description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    subdomain:
                      type: string
                    type:
                      type: string
                  type: object
                distributions:
                  description: ROS distro to be used.
                  items:
                    description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                    enum:
                      - foxy
                      - galactic
                      - noetic
                      - melodic
                      - humble
                    type: string
                  maxItems: 2
                  minItems: 1
                  type: array
                launchManagerTemplates:
                  description: Launch manager template for initial configuration
                  items:
                    description: LaunchManagerSpec defines the desired state of LaunchManager
                    properties:
                      display:
                        description: Display connection.
                        type: boolean
                      launch:
                        additionalProperties:
                          description: Launch description of a repository.
                          properties:
                            env:
                              description: Additional environment variables to set when launching ROS nodes.
                              items:
                                description: EnvVar represents an environment variable present in a Container.
                                properties:
                                  name:
                                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                                    type: string
                                  value:
                                    description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                    type: string
                                  valueFrom:
                                    description: Source for the environment variable's value. Cannot be used if value is not empty.
                                    properties:
                                      configMapKeyRef:
                                        description: Selects a key of a ConfigMap.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      fieldRef:
                                        description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select in the specified API version.
                                            type: string
                                        required:
                                          - fieldPath
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: Specifies the output format of the exposed resources, defaults to "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                          - resource
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secretKeyRef:
                                        description: Selects a key of a secret in the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                required:
                                  - name
                                type: object
                              type: array
                            launchFilePath:
                              description: Path to launchfile in repository. (eg. `linorobot/linorobot_gazebo/launch.py`)
                              type: string
                            namespacing:
                              description: Name of the repository.
                              type: boolean
                            parameters:
                              additionalProperties:
                                type: string
                              description: Launch parameters.
                              type: object
                            prelaunch:
                              description: Command or script to run just before node's execution.
                              properties:
                                command:
                                  description: Bash command to run before ROS node execution.
                                  type: string
                              required:
                                - command
                              type: object
                            privileged:
                              description: Launch container privilege.
                              type: boolean
                            repository:
                              description: Name of the repository.
                              type: string
                            resources:
                              description: Launch container resource limits.
                              properties:
                                cpu:
                                  pattern: ^([0-9])+(m)$
                                  type: string
                                gpuCore:
                                  type: integer
                                memory:
                                  pattern: ^([0-9])+(Mi|Gi)$
                                  type: string
                              type: object
                            selector:
                              additionalProperties:
                                type: string
                              description: Cluster selector.
                              type: object
                            workspace:
                              description: Name of the workspace.
                              type: string
                          required:
                            - launchFilePath
                            - repository
                            - workspace
                          type: object
                        type: object
                      run:
                        additionalProperties:
                          description: Run description.
                          properties:
                            env:
                              description: Additional environment variables to set when launching ROS nodes.
                              items:
                                description: EnvVar represents an environment variable present in a Container.
                                properties:
                                  name:
                                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                                    type: string
                                  value:
                                    description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                    type: string
                                  valueFrom:
                                    description: Source for the environment variable's value. Cannot be used if value is not empty.
                                    properties:
                                      configMapKeyRef:
                                        description: Selects a key of a ConfigMap.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      fieldRef:
                                        description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select in the specified API version.
                                            type: string
                                        required:
                                          - fieldPath
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: Specifies the output format of the exposed resources, defaults to "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                          - resource
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secretKeyRef:
                                        description: Selects a key of a secret in the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                required:
                                  - name
                                type: object
                              type: array
                            executable:
                              description: Executable name in `ros2 run <package> <executable>`.
                              type: string
                            namespacing:
                              description: Name of the repository.
                              type: boolean
                            package:
                              description: Package name in `ros2 run <package> <executable>`.
                              type: string
                            parameters:
                              additionalProperties:
                                type: string
                              description: Launch parameters.
                              type: object
                            prelaunch:
                              description: Command or script to run just before node's execution.
                              properties:
                                command:
                                  description: Bash command to run before ROS node execution.
                                  type: string
                              required:
                                - command
                              type: object
                            privileged:
                              description: Launch container privilege.
                              type: boolean
                            resources:
                              description: Launch container resource limits.
                              properties:
                                cpu:
                                  pattern: ^([0-9])+(m)$
                                  type: string
                                gpuCore:
                                  type: integer
                                memory:
                                  pattern: ^([0-9])+(Mi|Gi)$
                                  type: string
                              type: object
                            selector:
                              additionalProperties:
                                type: string
                              description: Cluster selector.
                              type: object
                            workspace:
                              description: Name of the workspace.
                              type: string
                          required:
                            - executable
                            - package
                            - workspace
                          type: object
                        type: object
                    type: object
                  type: array
                rmwImplementation:
                  default: rmw_fastrtps_cpp
                  description: RMW implementation selection. Robot operator currently supports only FastRTPS. See https://docs.ros.org/en/foxy/How-To-Guides/Working-with-multiple-RMW-implementations.html.
                  enum:
                    - rmw_fastrtps_cpp
                  type: string
                robotDevSuiteTemplate:
                  description: Robot development suite template
                  properties:
                    ideEnabled:
                      type: boolean
                    robotIDETemplate:
                      description: RobotIDESpec defines the desired state of RobotIDE
                      properties:
                        display:
                          description: Display configuration.
                          type: boolean
                        ingress:
                          type: boolean
                        privileged:
                          type: boolean
                        resources:
                          description: VDI resource limits.
                          properties:
                            cpu:
                              pattern: ^([0-9])+(m)$
                              type: string
                            gpuCore:
                              type: integer
                            memory:
                              pattern: ^([0-9])+(Mi|Gi)$
                              type: string
                          type: object
                        serviceType:
                          default: NodePort
                          description: ServiceType
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                      type: object
                    robotVDITemplate:
                      description: RobotVDISpec defines the desired state of RobotVDI
                      properties:
                        ingress:
                          type: boolean
                        nat1to1:
                          description: NAT1TO1 for Neko.
                          type: string
                        privileged:
                          type: boolean
                        resources:
                          description: VDI resource limits.
                          properties:
                            cpu:
                              pattern: ^([0-9])+(m)$
                              type: string
                            gpuCore:
                              type: integer
                            memory:
                              pattern: ^([0-9])+(Mi|Gi)$
                              type: string
                          type: object
                        serviceType:
                          default: NodePort
                          description: ServiceType
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                        webrtcPortRange:
                          pattern: ^([0-9])+-([0-9])+$
                          type: string
                      type: object
                    vdiEnabled:
                      type: boolean
                  type: object
                rootDNSConfig:
                  description: Root DNS configuration.
                  properties:
                    host:
                      description: DNS host.
                      type: string
                  required:
                    - host
                  type: object
                rosBridgeTemplate:
                  description: ROS bridge template
                  properties:
                    image:
                      type: string
                    ros:
                      properties:
                        distro:
                          description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                          enum:
                            - foxy
                            - galactic
                            - noetic
                            - melodic
                            - humble
                          type: string
                        enabled:
                          type: boolean
                      type: object
                    ros2:
                      properties:
                        distro:
                          description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                          enum:
                            - foxy
                            - galactic
                            - noetic
                            - melodic
                            - humble
                          type: string
                        enabled:
                          type: boolean
                      type: object
                  type: object
                storage:
                  description: Resource limitations of robot containers.
                  properties:
                    amount:
                      default: 10000
                      description: Specifies how much storage will be allocated in total.
                      type: integer
                    storageClassConfig:
                      description: Storage class selection for robot's volumes.
                      properties:
                        accessMode:
                          description: PVC access mode
                          type: string
                        name:
                          description: Storage class name
                          type: string
                      type: object
                  type: object
                tlsSecretRef:
                  description: TLS secret reference.
                  properties:
                    name:
                      description: TLS secret object name.
                      type: string
                    namespace:
                      description: TLS secret object namespace.
                      type: string
                  required:
                    - name
                    - namespace
                  type: object
                workspaceManagerTemplate:
                  description: Workspace manager template
                  properties:
                    updateNeeded:
                      description: Need update
                      type: boolean
                    workspaces:
                      description: Workspace definitions of robot.
                      items:
                        description: Workspace description. Each robot should contain at least one workspace. A workspace should contain at least one repository in it.
                        properties:
                          distro:
                            description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                            enum:
                              - foxy
                              - galactic
                              - noetic
                              - melodic
                              - humble
                            type: string
                          name:
                            description: Name of workspace. If a workspace's name is `my_ws`, it's absolute path is `/home/workspaces/my_ws`.
                            type: string
                          repositories:
                            additionalProperties:
                              description: Repository description.
                              properties:
                                branch:
                                  description: Branch of the repository to clone.
                                  type: string
                                hash:
                                  description: '[Autofilled] Hash of last commit'
                                  type: string
                                owner:
                                  description: '[Autofilled] User or organization, maintainer of repository'
                                  type: string
                                path:
                                  description: '[Autofilled] Absolute path of repository'
                                  type: string
                                repo:
                                  description: '[Autofilled] Repository name'
                                  type: string
                                url:
                                  description: Base URL of the repository.
                                  type: string
                              required:
                                - branch
                                - url
                              type: object
                            description: Repositories to clone inside workspace's `src` directory.
                            type: object
                        required:
                          - distro
                          - name
                          - repositories
                        type: object
                      minItems: 1
                      type: array
                    workspacesPath:
                      description: Global path of workspaces. It's fixed to `/home/workspaces` path.
                      type: string
                  type: object
              required:
                - distributions
                - rmwImplementation
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: robotdevsuites.dev.roboscale.io
spec:
  group: dev.roboscale.io
  names:
    kind: RobotDevSuite
    listKind: RobotDevSuiteList
    plural: robotdevsuites
    singular: robotdevsuite
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RobotDevSuite is the Schema for the robotdevsuites API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RobotDevSuiteSpec defines the desired state of RobotDevSuite
              properties:
                ideEnabled:
                  type: boolean
                robotIDETemplate:
                  description: RobotIDESpec defines the desired state of RobotIDE
                  properties:
                    display:
                      description: Display configuration.
                      type: boolean
                    ingress:
                      type: boolean
                    privileged:
                      type: boolean
                    resources:
                      description: VDI resource limits.
                      properties:
                        cpu:
                          pattern: ^([0-9])+(m)$
                          type: string
                        gpuCore:
                          type: integer
                        memory:
                          pattern: ^([0-9])+(Mi|Gi)$
                          type: string
                      type: object
                    serviceType:
                      default: NodePort
                      description: ServiceType
                      enum:
                        - ClusterIP
                        - NodePort
                      type: string
                  type: object
                robotVDITemplate:
                  description: RobotVDISpec defines the desired state of RobotVDI
                  properties:
                    ingress:
                      type: boolean
                    nat1to1:
                      description: NAT1TO1 for Neko.
                      type: string
                    privileged:
                      type: boolean
                    resources:
                      description: VDI resource limits.
                      properties:
                        cpu:
                          pattern: ^([0-9])+(m)$
                          type: string
                        gpuCore:
                          type: integer
                        memory:
                          pattern: ^([0-9])+(Mi|Gi)$
                          type: string
                      type: object
                    serviceType:
                      default: NodePort
                      description: ServiceType
                      enum:
                        - ClusterIP
                        - NodePort
                      type: string
                    webrtcPortRange:
                      pattern: ^([0-9])+-([0-9])+$
                      type: string
                  type: object
                vdiEnabled:
                  type: boolean
              type: object
            status:
              description: RobotDevSuiteStatus defines the observed state of RobotDevSuite
              properties:
                active:
                  type: boolean
                phase:
                  type: string
                robotIDEStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                robotVDIStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: robotides.dev.roboscale.io
spec:
  group: dev.roboscale.io
  names:
    kind: RobotIDE
    listKind: RobotIDEList
    plural: robotides
    singular: robotide
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RobotIDE is the Schema for the robotides API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RobotIDESpec defines the desired state of RobotIDE
              properties:
                display:
                  description: Display configuration.
                  type: boolean
                ingress:
                  type: boolean
                privileged:
                  type: boolean
                resources:
                  description: VDI resource limits.
                  properties:
                    cpu:
                      pattern: ^([0-9])+(m)$
                      type: string
                    gpuCore:
                      type: integer
                    memory:
                      pattern: ^([0-9])+(Mi|Gi)$
                      type: string
                  type: object
                serviceType:
                  default: NodePort
                  description: ServiceType
                  enum:
                    - ClusterIP
                    - NodePort
                  type: string
              type: object
            status:
              description: RobotIDEStatus defines the observed state of RobotIDE
              properties:
                ingressStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                phase:
                  type: string
                podStatus:
                  properties:
                    created:
                      type: boolean
                    ip:
                      type: string
                    phase:
                      description: PodPhase is a label for the condition of a pod at the current time.
                      type: string
                  type: object
                serviceStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: robots.dev.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: dev.roboscale.io
  names:
    kind: Robot
    listKind: RobotList
    plural: robots
    singular: robot
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.distributions
          name: Distributions
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Robot is the Schema for the robots API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RobotSpec defines the desired state of Robot
              properties:
                buildManagerTemplate:
                  description: Build manager template for initial configuration
                  properties:
                    steps:
                      items:
                        description: Step is a command or script to execute when building a robot. Either `command` or `script` should be specified for each step.
                        properties:
                          command:
                            description: Bash command to run.
                            type: string
                          env:
                            description: Environment variables for step.
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                        - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                                - name
                              type: object
                            type: array
                          name:
                            description: Name of the step.
                            type: string
                          script:
                            description: Bash script to run.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: Cluster selector.
                            type: object
                          workspace:
                            description: Name of the workspace.
                            type: string
                        required:
                          - name
                          - workspace
                        type: object
                      type: array
                  type: object
                development:
                  description: Development enabled
                  type: boolean
                discoveryServerTemplate:
                  description: Discovery server template
                  properties:
                    args:
                      items:
                        type: string
                      type: array
                    cluster:
                      type: string
                    hostname:
                      type: string
                    image:
                      type: string
                    reference:
                      description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    subdomain:
                      type: string
                    type:
                      type: string
                  type: object
                distributions:
                  description: ROS distro to be used.
                  items:
                    description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                    enum:
                      - foxy
                      - galactic
                      - noetic
                      - melodic
                      - humble
                    type: string
                  maxItems: 2
                  minItems: 1
                  type: array
                launchManagerTemplates:
                  description: Launch manager template for initial configuration
                  items:
                    description: LaunchManagerSpec defines the desired state of LaunchManager
                    properties:
                      display:
                        description: Display connection.
                        type: boolean
                      launch:
                        additionalProperties:
                          description: Launch description of a repository.
                          properties:
                            env:
                              description: Additional environment variables to set when launching ROS nodes.
                              items:
                                description: EnvVar represents an environment variable present in a Container.
                                properties:
                                  name:
                                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                                    type: string
                                  value:
                                    description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                    type: string
                                  valueFrom:
                                    description: Source for the environment variable's value. Cannot be used if value is not empty.
                                    properties:
                                      configMapKeyRef:
                                        description: Selects a key of a ConfigMap.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      fieldRef:
                                        description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select in the specified API version.
                                            type: string
                                        required:
                                          - fieldPath
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: Specifies the output format of the exposed resources, defaults to "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                          - resource
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secretKeyRef:
                                        description: Selects a key of a secret in the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                required:
                                  - name
                                type: object
                              type: array
                            launchFilePath:
                              description: Path to launchfile in repository. (eg. `linorobot/linorobot_gazebo/launch.py`)
                              type: string
                            namespacing:
                              description: Name of the repository.
                              type: boolean
                            parameters:
                              additionalProperties:
                                type: string
                              description: Launch parameters.
                              type: object
                            prelaunch:
                              description: Command or script to run just before node's execution.
                              properties:
                                command:
                                  description: Bash command to run before ROS node execution.
                                  type: string
                              required:
                                - command
                              type: object
                            privileged:
                              description: Launch container privilege.
                              type: boolean
                            repository:
                              description: Name of the repository.
                              type: string
                            resources:
                              description: Launch container resource limits.
                              properties:
                                cpu:
                                  pattern: ^([0-9])+(m)$
                                  type: string
                                gpuCore:
                                  type: integer
                                memory:
                                  pattern: ^([0-9])+(Mi|Gi)$
                                  type: string
                              type: object
                            selector:
                              additionalProperties:
                                type: string
                              description: Cluster selector.
                              type: object
                            workspace:
                              description: Name of the workspace.
                              type: string
                          required:
                            - launchFilePath
                            - repository
                            - workspace
                          type: object
                        type: object
                      run:
                        additionalProperties:
                          description: Run description.
                          properties:
                            env:
                              description: Additional environment variables to set when launching ROS nodes.
                              items:
                                description: EnvVar represents an environment variable present in a Container.
                                properties:
                                  name:
                                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                                    type: string
                                  value:
                                    description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                    type: string
                                  valueFrom:
                                    description: Source for the environment variable's value. Cannot be used if value is not empty.
                                    properties:
                                      configMapKeyRef:
                                        description: Selects a key of a ConfigMap.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      fieldRef:
                                        description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select in the specified API version.
                                            type: string
                                        required:
                                          - fieldPath
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: Specifies the output format of the exposed resources, defaults to "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                          - resource
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secretKeyRef:
                                        description: Selects a key of a secret in the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to select from.  Must be a valid secret key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret or its key must be defined
                                            type: boolean
                                        required:
                                          - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                required:
                                  - name
                                type: object
                              type: array
                            executable:
                              description: Executable name in `ros2 run <package> <executable>`.
                              type: string
                            namespacing:
                              description: Name of the repository.
                              type: boolean
                            package:
                              description: Package name in `ros2 run <package> <executable>`.
                              type: string
                            parameters:
                              additionalProperties:
                                type: string
                              description: Launch parameters.
                              type: object
                            prelaunch:
                              description: Command or script to run just before node's execution.
                              properties:
                                command:
                                  description: Bash command to run before ROS node execution.
                                  type: string
                              required:
                                - command
                              type: object
                            privileged:
                              description: Launch container privilege.
                              type: boolean
                            resources:
                              description: Launch container resource limits.
                              properties:
                                cpu:
                                  pattern: ^([0-9])+(m)$
                                  type: string
                                gpuCore:
                                  type: integer
                                memory:
                                  pattern: ^([0-9])+(Mi|Gi)$
                                  type: string
                              type: object
                            selector:
                              additionalProperties:
                                type: string
                              description: Cluster selector.
                              type: object
                            workspace:
                              description: Name of the workspace.
                              type: string
                          required:
                            - executable
                            - package
                            - workspace
                          type: object
                        type: object
                    type: object
                  type: array
                rmwImplementation:
                  default: rmw_fastrtps_cpp
                  description: RMW implementation selection. Robot operator currently supports only FastRTPS. See https://docs.ros.org/en/foxy/How-To-Guides/Working-with-multiple-RMW-implementations.html.
                  enum:
                    - rmw_fastrtps_cpp
                  type: string
                robotDevSuiteTemplate:
                  description: Robot development suite template
                  properties:
                    ideEnabled:
                      type: boolean
                    robotIDETemplate:
                      description: RobotIDESpec defines the desired state of RobotIDE
                      properties:
                        display:
                          description: Display configuration.
                          type: boolean
                        ingress:
                          type: boolean
                        privileged:
                          type: boolean
                        resources:
                          description: VDI resource limits.
                          properties:
                            cpu:
                              pattern: ^([0-9])+(m)$
                              type: string
                            gpuCore:
                              type: integer
                            memory:
                              pattern: ^([0-9])+(Mi|Gi)$
                              type: string
                          type: object
                        serviceType:
                          default: NodePort
                          description: ServiceType
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                      type: object
                    robotVDITemplate:
                      description: RobotVDISpec defines the desired state of RobotVDI
                      properties:
                        ingress:
                          type: boolean
                        nat1to1:
                          description: NAT1TO1 for Neko.
                          type: string
                        privileged:
                          type: boolean
                        resources:
                          description: VDI resource limits.
                          properties:
                            cpu:
                              pattern: ^([0-9])+(m)$
                              type: string
                            gpuCore:
                              type: integer
                            memory:
                              pattern: ^([0-9])+(Mi|Gi)$
                              type: string
                          type: object
                        serviceType:
                          default: NodePort
                          description: ServiceType
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                        webrtcPortRange:
                          pattern: ^([0-9])+-([0-9])+$
                          type: string
                      type: object
                    vdiEnabled:
                      type: boolean
                  type: object
                rootDNSConfig:
                  description: Root DNS configuration.
                  properties:
                    host:
                      description: DNS host.
                      type: string
                  required:
                    - host
                  type: object
                rosBridgeTemplate:
                  description: ROS bridge template
                  properties:
                    image:
                      type: string
                    ros:
                      properties:
                        distro:
                          description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                          enum:
                            - foxy
                            - galactic
                            - noetic
                            - melodic
                            - humble
                          type: string
                        enabled:
                          type: boolean
                      type: object
                    ros2:
                      properties:
                        distro:
                          description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                          enum:
                            - foxy
                            - galactic
                            - noetic
                            - melodic
                            - humble
                          type: string
                        enabled:
                          type: boolean
                      type: object
                  type: object
                storage:
                  description: Resource limitations of robot containers.
                  properties:
                    amount:
                      default: 10000
                      description: Specifies how much storage will be allocated in total.
                      type: integer
                    storageClassConfig:
                      description: Storage class selection for robot's volumes.
                      properties:
                        accessMode:
                          description: PVC access mode
                          type: string
                        name:
                          description: Storage class name
                          type: string
                      type: object
                  type: object
                tlsSecretRef:
                  description: TLS secret reference.
                  properties:
                    name:
                      description: TLS secret object name.
                      type: string
                    namespace:
                      description: TLS secret object namespace.
                      type: string
                  required:
                    - name
                    - namespace
                  type: object
                workspaceManagerTemplate:
                  description: Workspace manager template
                  properties:
                    updateNeeded:
                      description: Need update
                      type: boolean
                    workspaces:
                      description: Workspace definitions of robot.
                      items:
                        description: Workspace description. Each robot should contain at least one workspace. A workspace should contain at least one repository in it.
                        properties:
                          distro:
                            description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                            enum:
                              - foxy
                              - galactic
                              - noetic
                              - melodic
                              - humble
                            type: string
                          name:
                            description: Name of workspace. If a workspace's name is `my_ws`, it's absolute path is `/home/workspaces/my_ws`.
                            type: string
                          repositories:
                            additionalProperties:
                              description: Repository description.
                              properties:
                                branch:
                                  description: Branch of the repository to clone.
                                  type: string
                                hash:
                                  description: '[Autofilled] Hash of last commit'
                                  type: string
                                owner:
                                  description: '[Autofilled] User or organization, maintainer of repository'
                                  type: string
                                path:
                                  description: '[Autofilled] Absolute path of repository'
                                  type: string
                                repo:
                                  description: '[Autofilled] Repository name'
                                  type: string
                                url:
                                  description: Base URL of the repository.
                                  type: string
                              required:
                                - branch
                                - url
                              type: object
                            description: Repositories to clone inside workspace's `src` directory.
                            type: object
                        required:
                          - distro
                          - name
                          - repositories
                        type: object
                      minItems: 1
                      type: array
                    workspacesPath:
                      description: Global path of workspaces. It's fixed to `/home/workspaces` path.
                      type: string
                  type: object
              required:
                - distributions
                - rmwImplementation
              type: object
            status:
              description: RobotStatus defines the observed state of Robot
              properties:
                attachedBuildObject:
                  description: Attached build object information
                  properties:
                    reference:
                      description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    status:
                      description: BuildManagerStatus defines the observed state of BuildManager
                      properties:
                        active:
                          type: boolean
                        phase:
                          type: string
                        scriptConfigMapStatus:
                          properties:
                            created:
                              type: boolean
                          type: object
                        steps:
                          items:
                            properties:
                              created:
                                type: boolean
                              jobName:
                                type: string
                              jobPhase:
                                type: string
                              step:
                                description: Step is a command or script to execute when building a robot. Either `command` or `script` should be specified for each step.
                                properties:
                                  command:
                                    description: Bash command to run.
                                    type: string
                                  env:
                                    description: Environment variables for step.
                                    items:
                                      description: EnvVar represents an environment variable present in a Container.
                                      properties:
                                        name:
                                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                                          type: string
                                        value:
                                          description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                          type: string
                                        valueFrom:
                                          description: Source for the environment variable's value. Cannot be used if value is not empty.
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                                - key
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            fieldRef:
                                              description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to select in the specified API version.
                                                  type: string
                                              required:
                                                - fieldPath
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            resourceFieldRef:
                                              description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required for volumes, optional for env vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: Specifies the output format of the exposed resources, defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource to select'
                                                  type: string
                                              required:
                                                - resource
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            secretKeyRef:
                                              description: Selects a key of a secret in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret to select from.  Must be a valid secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the Secret or its key must be defined
                                                  type: boolean
                                              required:
                                                - key
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                      required:
                                        - name
                                      type: object
                                    type: array
                                  name:
                                    description: Name of the step.
                                    type: string
                                  script:
                                    description: Bash script to run.
                                    type: string
                                  selector:
                                    additionalProperties:
                                      type: string
                                    description: Cluster selector.
                                    type: object
                                  workspace:
                                    description: Name of the workspace.
                                    type: string
                                required:
                                  - name
                                  - workspace
                                type: object
                            type: object
                          type: array
                      type: object
                  type: object
                attachedDevObjects:
                  description: Attached dev object information
                  items:
                    properties:
                      reference:
                        description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      status:
                        description: RobotDevSuiteStatus defines the observed state of RobotDevSuite
                        properties:
                          active:
                            type: boolean
                          phase:
                            type: string
                          robotIDEStatus:
                            properties:
                              created:
                                type: boolean
                              phase:
                                type: string
                            type: object
                          robotVDIStatus:
                            properties:
                              created:
                                type: boolean
                              phase:
                                type: string
                            type: object
                        type: object
                    type: object
                  type: array
                attachedLaunchObjects:
                  description: Attached launch object information
                  items:
                    properties:
                      reference:
                        description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      status:
                        description: LaunchManagerStatus defines the observed state of LaunchManager
                        properties:
                          active:
                            type: boolean
                          launchPodStatus:
                            properties:
                              created:
                                type: boolean
                              ip:
                                type: string
                              launchStatus:
                                additionalProperties:
                                  properties:
                                    active:
                                      type: boolean
                                    containerStatus:
                                      description: ContainerStatus contains details for the current status of this container.
                                      properties:
                                        containerID:
                                          description: Container's ID in the format '<type>://<container_id>'.
                                          type: string
                                        image:
                                          description: 'The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.'
                                          type: string
                                        imageID:
                                          description: ImageID of the container's image.
                                          type: string
                                        lastState:
                                          description: Details about the container's last termination condition.
                                          properties:
                                            running:
                                              description: Details about a running container
                                              properties:
                                                startedAt:
                                                  description: Time at which the container was last (re-)started
                                                  format: date-time
                                                  type: string
                                              type: object
                                            terminated:
                                              description: Details about a terminated container
                                              properties:
                                                containerID:
                                                  description: Container's ID in the format '<type>://<container_id>'
                                                  type: string
                                                exitCode:
                                                  description: Exit status from the last termination of the container
                                                  format: int32
                                                  type: integer
                                                finishedAt:
                                                  description: Time at which the container last terminated
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: Message regarding the last termination of the container
                                                  type: string
                                                reason:
                                                  description: (brief) reason from the last termination of the container
                                                  type: string
                                                signal:
                                                  description: Signal from the last termination of the container
                                                  format: int32
                                                  type: integer
                                                startedAt:
                                                  description: Time at which previous execution of the container started
                                                  format: date-time
                                                  type: string
                                              required:
                                                - exitCode
                                              type: object
                                            waiting:
                                              description: Details about a waiting container
                                              properties:
                                                message:
                                                  description: Message regarding why the container is not yet running.
                                                  type: string
                                                reason:
                                                  description: (brief) reason the container is not yet running.
                                                  type: string
                                              type: object
                                          type: object
                                        name:
                                          description: This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
                                          type: string
                                        ready:
                                          description: Specifies whether the container has passed its readiness probe.
                                          type: boolean
                                        restartCount:
                                          description: The number of times the container has been restarted.
                                          format: int32
                                          type: integer
                                        started:
                                          description: Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.
                                          type: boolean
                                        state:
                                          description: Details about the container's current condition.
                                          properties:
                                            running:
                                              description: Details about a running container
                                              properties:
                                                startedAt:
                                                  description: Time at which the container was last (re-)started
                                                  format: date-time
                                                  type: string
                                              type: object
                                            terminated:
                                              description: Details about a terminated container
                                              properties:
                                                containerID:
                                                  description: Container's ID in the format '<type>://<container_id>'
                                                  type: string
                                                exitCode:
                                                  description: Exit status from the last termination of the container
                                                  format: int32
                                                  type: integer
                                                finishedAt:
                                                  description: Time at which the container last terminated
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: Message regarding the last termination of the container
                                                  type: string
                                                reason:
                                                  description: (brief) reason from the last termination of the container
                                                  type: string
                                                signal:
                                                  description: Signal from the last termination of the container
                                                  format: int32
                                                  type: integer
                                                startedAt:
                                                  description: Time at which previous execution of the container started
                                                  format: date-time
                                                  type: string
                                              required:
                                                - exitCode
                                              type: object
                                            waiting:
                                              description: Details about a waiting container
                                              properties:
                                                message:
                                                  description: Message regarding why the container is not yet running.
                                                  type: string
                                                reason:
                                                  description: (brief) reason the container is not yet running.
                                                  type: string
                                              type: object
                                          type: object
                                      required:
                                        - image
                                        - imageID
                                        - name
                                        - ready
                                        - restartCount
                                      type: object
                                  type: object
                                type: object
                              phase:
                                description: PodPhase is a label for the condition of a pod at the current time.
                                type: string
                            type: object
                          phase:
                            type: string
                        type: object
                    type: object
                  type: array
                discoveryServerStatus:
                  description: Discovery server instance status
                  properties:
                    created:
                      type: boolean
                    status:
                      description: DiscoveryServerStatus defines the observed state of DiscoveryServer
                      properties:
                        configMapStatus:
                          properties:
                            created:
                              type: boolean
                          type: object
                        connectionInfo:
                          properties:
                            configMapName:
                              type: string
                            ip:
                              type: string
                          type: object
                        phase:
                          type: string
                        podStatus:
                          properties:
                            created:
                              type: boolean
                            ip:
                              type: string
                            phase:
                              description: PodPhase is a label for the condition of a pod at the current time.
                              type: string
                          type: object
                        serviceExportStatus:
                          properties:
                            created:
                              type: boolean
                          type: object
                        serviceStatus:
                          properties:
                            created:
                              type: boolean
                          type: object
                      type: object
                  type: object
                image:
                  description: Image of robot
                  type: string
                initialBuildManagerStatus:
                  description: Initial build manager creation status
                  properties:
                    created:
                      type: boolean
                    name:
                      type: string
                  type: object
                initialLaunchManagerStatuses:
                  description: Initial launch manager creation status
                  items:
                    properties:
                      created:
                        type: boolean
                      name:
                        type: string
                    type: object
                  type: array
                loaderJobStatus:
                  description: Loader job status that configures environment
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                nodeName:
                  description: Node name
                  type: string
                phase:
                  description: Phase of robot
                  type: string
                robotDevSuiteStatus:
                  description: Robot development suite instance status
                  properties:
                    created:
                      type: boolean
                    status:
                      description: RobotDevSuiteStatus defines the observed state of RobotDevSuite
                      properties:
                        active:
                          type: boolean
                        phase:
                          type: string
                        robotIDEStatus:
                          properties:
                            created:
                              type: boolean
                            phase:
                              type: string
                          type: object
                        robotVDIStatus:
                          properties:
                            created:
                              type: boolean
                            phase:
                              type: string
                          type: object
                      type: object
                  type: object
                rosBridgeStatus:
                  description: ROS bridge instance status
                  properties:
                    created:
                      type: boolean
                    status:
                      description: ROSBridgeStatus defines the observed state of ROSBridge
                      properties:
                        phase:
                          type: string
                        podStatus:
                          properties:
                            created:
                              type: boolean
                            phase:
                              description: PodPhase is a label for the condition of a pod at the current time.
                              type: string
                          type: object
                        serviceStatus:
                          properties:
                            created:
                              type: boolean
                          type: object
                      type: object
                  type: object
                volumeStatuses:
                  description: Volume status
                  properties:
                    etc:
                      properties:
                        created:
                          type: boolean
                        persistentVolumeClaimName:
                          type: string
                      type: object
                    opt:
                      properties:
                        created:
                          type: boolean
                        persistentVolumeClaimName:
                          type: string
                      type: object
                    usr:
                      properties:
                        created:
                          type: boolean
                        persistentVolumeClaimName:
                          type: string
                      type: object
                    var:
                      properties:
                        created:
                          type: boolean
                        persistentVolumeClaimName:
                          type: string
                      type: object
                    workspace:
                      properties:
                        created:
                          type: boolean
                        persistentVolumeClaimName:
                          type: string
                      type: object
                  type: object
                workspaceManagerStatus:
                  description: Workspace manager status
                  properties:
                    created:
                      type: boolean
                    status:
                      description: WorkspaceManagerStatus defines the observed state of WorkspaceManager
                      properties:
                        cleanupJobStatus:
                          properties:
                            created:
                              type: boolean
                            phase:
                              type: string
                          type: object
                        clonerJobStatus:
                          properties:
                            created:
                              type: boolean
                            phase:
                              type: string
                          type: object
                        phase:
                          type: string
                        version:
                          type: integer
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: robotvdis.dev.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: dev.roboscale.io
  names:
    kind: RobotVDI
    listKind: RobotVDIList
    plural: robotvdis
    singular: robotvdi
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RobotVDI is the Schema for the robotvdis API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RobotVDISpec defines the desired state of RobotVDI
              properties:
                ingress:
                  type: boolean
                nat1to1:
                  description: NAT1TO1 for Neko.
                  type: string
                privileged:
                  type: boolean
                resources:
                  description: VDI resource limits.
                  properties:
                    cpu:
                      pattern: ^([0-9])+(m)$
                      type: string
                    gpuCore:
                      type: integer
                    memory:
                      pattern: ^([0-9])+(Mi|Gi)$
                      type: string
                  type: object
                serviceType:
                  default: NodePort
                  description: ServiceType
                  enum:
                    - ClusterIP
                    - NodePort
                  type: string
                webrtcPortRange:
                  pattern: ^([0-9])+-([0-9])+$
                  type: string
              type: object
            status:
              description: RobotVDIStatus defines the observed state of RobotVDI
              properties:
                ingressStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                phase:
                  type: string
                podStatus:
                  properties:
                    created:
                      type: boolean
                    ip:
                      type: string
                    phase:
                      description: PodPhase is a label for the condition of a pod at the current time.
                      type: string
                  type: object
                pvcStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                serviceTCPStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                serviceUDPStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: rosbridges.dev.roboscale.io
spec:
  group: dev.roboscale.io
  names:
    kind: ROSBridge
    listKind: ROSBridgeList
    plural: rosbridges
    singular: rosbridge
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ROSBridge is the Schema for the rosbridges API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ROSBridgeSpec defines the desired state of ROSBridge
              properties:
                image:
                  type: string
                ros:
                  properties:
                    distro:
                      description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                      enum:
                        - foxy
                        - galactic
                        - noetic
                        - melodic
                        - humble
                      type: string
                    enabled:
                      type: boolean
                  type: object
                ros2:
                  properties:
                    distro:
                      description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                      enum:
                        - foxy
                        - galactic
                        - noetic
                        - melodic
                        - humble
                      type: string
                    enabled:
                      type: boolean
                  type: object
              type: object
            status:
              description: ROSBridgeStatus defines the observed state of ROSBridge
              properties:
                phase:
                  type: string
                podStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      description: PodPhase is a label for the condition of a pod at the current time.
                      type: string
                  type: object
                serviceStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: serviceexports.multicluster.x-k8s.io
spec:
  group: multicluster.x-k8s.io
  names:
    kind: ServiceExport
    listKind: ServiceExportList
    plural: serviceexports
    singular: serviceexport
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceExport declares that the Service with the same name and namespace as this export should be consumable from other clusters.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              description: status describes the current state of an exported service. Service configuration comes from the Service that had the same name and namespace as this ServiceExport. Populated by the multi-cluster service implementation's controller.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: serviceimports.multicluster.x-k8s.io
spec:
  group: multicluster.x-k8s.io
  names:
    kind: ServiceImport
    listKind: ServiceImportList
    plural: serviceimports
    singular: serviceimport
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceImport describes a service imported from clusters in a ClusterSet.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec defines the behavior of a ServiceImport.
              properties:
                ips:
                  description: ip will be used as the VIP for this service when type is ClusterSetIP.
                  items:
                    type: string
                  maxItems: 1
                  type: array
                ports:
                  items:
                    description: ServicePort represents the port on which the service is exposed
                    properties:
                      appProtocol:
                        description: The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.
                        type: string
                      name:
                        description: The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                        type: string
                      port:
                        description: The port that will be exposed by this service.
                        format: int32
                        type: integer
                      protocol:
                        default: TCP
                        description: The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                        type: string
                    required:
                      - port
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
                sessionAffinity:
                  description: 'Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. Ignored when type is Headless More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                  type: string
                sessionAffinityConfig:
                  description: sessionAffinityConfig contains session affinity configuration.
                  properties:
                    clientIP:
                      description: clientIP contains the configurations of Client IP based session affinity.
                      properties:
                        timeoutSeconds:
                          description: timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                          format: int32
                          type: integer
                      type: object
                  type: object
                type:
                  description: type defines the type of this service. Must be ClusterSetIP or Headless.
                  enum:
                    - ClusterSetIP
                    - Headless
                  type: string
              required:
                - ports
                - type
              type: object
            status:
              description: status contains information about the exported services that form the multi-cluster service referenced by this ServiceImport.
              properties:
                clusters:
                  description: clusters is the list of exporting clusters from which this service was derived.
                  items:
                    description: ClusterStatus contains service configuration mapped to a specific source cluster
                    properties:
                      cluster:
                        description: cluster is the name of the exporting cluster. Must be a valid RFC-1123 DNS label.
                        type: string
                    required:
                      - cluster
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - cluster
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: workspacemanagers.dev.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: robot-webhook-service
          namespace: robot-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: dev.roboscale.io
  names:
    kind: WorkspaceManager
    listKind: WorkspaceManagerList
    plural: workspacemanagers
    singular: workspacemanager
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkspaceManager is the Schema for the workspacemanagers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkspaceManagerSpec defines the desired state of WorkspaceManager
              properties:
                updateNeeded:
                  description: Need update
                  type: boolean
                workspaces:
                  description: Workspace definitions of robot.
                  items:
                    description: Workspace description. Each robot should contain at least one workspace. A workspace should contain at least one repository in it.
                    properties:
                      distro:
                        description: ROS distro selection. Allowed distros are Foxy and Galactic. It is aimed to support Humble, Melodic and Noetic in further versions.
                        enum:
                          - foxy
                          - galactic
                          - noetic
                          - melodic
                          - humble
                        type: string
                      name:
                        description: Name of workspace. If a workspace's name is `my_ws`, it's absolute path is `/home/workspaces/my_ws`.
                        type: string
                      repositories:
                        additionalProperties:
                          description: Repository description.
                          properties:
                            branch:
                              description: Branch of the repository to clone.
                              type: string
                            hash:
                              description: '[Autofilled] Hash of last commit'
                              type: string
                            owner:
                              description: '[Autofilled] User or organization, maintainer of repository'
                              type: string
                            path:
                              description: '[Autofilled] Absolute path of repository'
                              type: string
                            repo:
                              description: '[Autofilled] Repository name'
                              type: string
                            url:
                              description: Base URL of the repository.
                              type: string
                          required:
                            - branch
                            - url
                          type: object
                        description: Repositories to clone inside workspace's `src` directory.
                        type: object
                    required:
                      - distro
                      - name
                      - repositories
                    type: object
                  minItems: 1
                  type: array
                workspacesPath:
                  description: Global path of workspaces. It's fixed to `/home/workspaces` path.
                  type: string
              type: object
            status:
              description: WorkspaceManagerStatus defines the observed state of WorkspaceManager
              properties:
                cleanupJobStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                clonerJobStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                phase:
                  type: string
                version:
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: robot-operator
  name: robot-controller-manager
  namespace: robot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: robot-operator
  name: robot-leader-election-role
  namespace: robot-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: robot-manager-role
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - buildmanagers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - buildmanagers/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - buildmanagers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - discoveryservers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - discoveryservers/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - discoveryservers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - launchmanagers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - launchmanagers/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - launchmanagers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - metricscollectors
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - metricscollectors/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - metricscollectors/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotdevsuites
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotdevsuites/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotdevsuites/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotides
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotides/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotides/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robots
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robots/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robots/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotvdis
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotvdis/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - robotvdis/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - rosbridges
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - rosbridges/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - rosbridges/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - workspacemanagers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dev.roboscale.io
    resources:
      - workspacemanagers/finalizers
    verbs:
      - update
  - apiGroups:
      - dev.roboscale.io
    resources:
      - workspacemanagers/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: robot-operator
  name: robot-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: robot-operator
  name: robot-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: robot-operator
  name: robot-leader-election-rolebinding
  namespace: robot-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: robot-leader-election-role
subjects:
  - kind: ServiceAccount
    name: robot-controller-manager
    namespace: robot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: robot-operator
  name: robot-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: robot-manager-role
subjects:
  - kind: ServiceAccount
    name: robot-controller-manager
    namespace: robot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: robot-operator
  name: robot-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: robot-proxy-role
subjects:
  - kind: ServiceAccount
    name: robot-controller-manager
    namespace: robot-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: robot-operator
    control-plane: controller-manager
  name: robot-controller-manager-metrics-service
  namespace: robot-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: robot-operator
  name: robot-webhook-service
  namespace: robot-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: robot-operator
    control-plane: controller-manager
  name: robot-controller-manager
  namespace: robot-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          image: robolaunchio/robot-controller-manager:v0.2.4-alpha.1
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: robot-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
      nodeSelector:
        robolaunch.io/organization: robolaunch
        robolaunch.io/team: robotics
        robolaunch.io/region: europe-east
        robolaunch.io/cloud-instance: cluster
        robolaunch.io/cloud-instance-alias: cluster-alias
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: robot-operator
  name: robot-serving-cert
  namespace: robot-system
spec:
  dnsNames:
    - robot-webhook-service.robot-system.svc
    - robot-webhook-service.robot-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: robot-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kuberentes.io/name: issuer
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/part-of: robot-operator
  name: robot-selfsigned-issuer
  namespace: robot-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: robot-operator
  name: robot-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-robotide
    failurePolicy: Fail
    name: mrobotide.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotides
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-robotvdi
    failurePolicy: Fail
    name: mrobotvdi.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotvdis
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-workspacemanager
    failurePolicy: Fail
    name: mworkspacemanager.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - workspacemanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-buildmanager
    failurePolicy: Fail
    name: mbuildmanager.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - buildmanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-launchmanager
    failurePolicy: Fail
    name: mlaunchmanager.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - launchmanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-metricscollector
    failurePolicy: Fail
    name: mmetricscollector.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - metricscollectors
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-robot
    failurePolicy: Fail
    name: mrobot.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robots
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /mutate-robot-roboscale-io-v1alpha1-discoveryserver
    failurePolicy: Fail
    name: mdiscoveryserver.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - discoveryservers
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: robot-system/robot-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: robot-operator
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: robot-operator
  name: robot-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-robotide
    failurePolicy: Fail
    name: vrobotide.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotides
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-robotvdi
    failurePolicy: Fail
    name: vrobotvdi.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robotvdis
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-workspacemanager
    failurePolicy: Fail
    name: vworkspacemanager.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - workspacemanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-buildmanager
    failurePolicy: Fail
    name: vbuildmanager.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - buildmanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-launchmanager
    failurePolicy: Fail
    name: vlaunchmanager.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - launchmanagers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-metricscollector
    failurePolicy: Fail
    name: vmetricscollector.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - metricscollectors
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-robot
    failurePolicy: Fail
    name: vrobot.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - robots
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: robot-webhook-service
        namespace: robot-system
        path: /validate-robot-roboscale-io-v1alpha1-discoveryserver
    failurePolicy: Fail
    name: vdiscoveryserver.kb.io
    rules:
      - apiGroups:
          - dev.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - discoveryservers
    sideEffects: None
