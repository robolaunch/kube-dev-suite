---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: robotartifacts.dev.roboscale.io
spec:
  group: dev.roboscale.io
  names:
    kind: RobotArtifact
    listKind: RobotArtifactList
    plural: robotartifacts
    singular: robotartifact
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RobotArtifact is the Schema for the robotartifacts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          template:
            description: RobotSpec defines the desired state of Robot
            properties:
              buildManagerTemplate:
                description: Build manager template for initial configuration
                properties:
                  steps:
                    items:
                      description: Step is a command or script to execute when building
                        a robot. Either `command` or `script` should be specified
                        for each step.
                      properties:
                        command:
                          description: Bash command to run.
                          type: string
                        env:
                          description: Environment variables for step.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        name:
                          description: Name of the step.
                          type: string
                        script:
                          description: Bash script to run.
                          type: string
                        selector:
                          additionalProperties:
                            type: string
                          description: Cluster selector.
                          type: object
                        workspace:
                          description: Name of the workspace.
                          type: string
                      required:
                      - name
                      - workspace
                      type: object
                    type: array
                type: object
              development:
                description: Development enabled
                type: boolean
              discoveryServerTemplate:
                description: Discovery server template
                properties:
                  args:
                    items:
                      type: string
                    type: array
                  cluster:
                    type: string
                  hostname:
                    type: string
                  image:
                    type: string
                  reference:
                    description: "ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, \"must refer only to types A and B\" or \"UID
                      not honored\" or \"name must be restricted\". Those cannot be
                      well described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.
                      \ Kind is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don't make new APIs
                      embed an underspecified API type they do not control. \n Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      ."
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  subdomain:
                    type: string
                  type:
                    type: string
                type: object
              distributions:
                description: ROS distro to be used.
                items:
                  description: ROS distro selection. Allowed distros are Foxy and
                    Galactic. It is aimed to support Humble, Melodic and Noetic in
                    further versions.
                  enum:
                  - foxy
                  - galactic
                  - noetic
                  - melodic
                  - humble
                  type: string
                maxItems: 2
                minItems: 1
                type: array
              launchManagerTemplates:
                description: Launch manager template for initial configuration
                items:
                  description: LaunchManagerSpec defines the desired state of LaunchManager
                  properties:
                    display:
                      description: Display connection.
                      type: boolean
                    launch:
                      additionalProperties:
                        description: Launch description of a repository.
                        properties:
                          env:
                            description: Additional environment variables to set when
                              launching ROS nodes.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          launchFilePath:
                            description: Path to launchfile in repository. (eg. `linorobot/linorobot_gazebo/launch.py`)
                            type: string
                          namespacing:
                            description: Name of the repository.
                            type: boolean
                          parameters:
                            additionalProperties:
                              type: string
                            description: Launch parameters.
                            type: object
                          prelaunch:
                            description: Command or script to run just before node's
                              execution.
                            properties:
                              command:
                                description: Bash command to run before ROS node execution.
                                type: string
                            required:
                            - command
                            type: object
                          privileged:
                            description: Launch container privilege.
                            type: boolean
                          repository:
                            description: Name of the repository.
                            type: string
                          resources:
                            description: Launch container resource limits.
                            properties:
                              cpu:
                                pattern: ^([0-9])+(m)$
                                type: string
                              gpuCore:
                                type: integer
                              memory:
                                pattern: ^([0-9])+(Mi|Gi)$
                                type: string
                            type: object
                          selector:
                            additionalProperties:
                              type: string
                            description: Cluster selector.
                            type: object
                          workspace:
                            description: Name of the workspace.
                            type: string
                        required:
                        - launchFilePath
                        - repository
                        - workspace
                        type: object
                      type: object
                    run:
                      additionalProperties:
                        description: Run description.
                        properties:
                          env:
                            description: Additional environment variables to set when
                              launching ROS nodes.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          executable:
                            description: Executable name in `ros2 run <package> <executable>`.
                            type: string
                          namespacing:
                            description: Name of the repository.
                            type: boolean
                          package:
                            description: Package name in `ros2 run <package> <executable>`.
                            type: string
                          parameters:
                            additionalProperties:
                              type: string
                            description: Launch parameters.
                            type: object
                          prelaunch:
                            description: Command or script to run just before node's
                              execution.
                            properties:
                              command:
                                description: Bash command to run before ROS node execution.
                                type: string
                            required:
                            - command
                            type: object
                          privileged:
                            description: Launch container privilege.
                            type: boolean
                          resources:
                            description: Launch container resource limits.
                            properties:
                              cpu:
                                pattern: ^([0-9])+(m)$
                                type: string
                              gpuCore:
                                type: integer
                              memory:
                                pattern: ^([0-9])+(Mi|Gi)$
                                type: string
                            type: object
                          selector:
                            additionalProperties:
                              type: string
                            description: Cluster selector.
                            type: object
                          workspace:
                            description: Name of the workspace.
                            type: string
                        required:
                        - executable
                        - package
                        - workspace
                        type: object
                      type: object
                  type: object
                type: array
              rmwImplementation:
                default: rmw_fastrtps_cpp
                description: RMW implementation selection. Robot operator currently
                  supports only FastRTPS. See https://docs.ros.org/en/foxy/How-To-Guides/Working-with-multiple-RMW-implementations.html.
                enum:
                - rmw_fastrtps_cpp
                type: string
              robotDevSuiteTemplate:
                description: Robot development suite template
                properties:
                  ideEnabled:
                    type: boolean
                  robotIDETemplate:
                    description: RobotIDESpec defines the desired state of RobotIDE
                    properties:
                      display:
                        description: Display configuration.
                        type: boolean
                      ingress:
                        type: boolean
                      privileged:
                        type: boolean
                      resources:
                        description: VDI resource limits.
                        properties:
                          cpu:
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            type: integer
                          memory:
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: ServiceType
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                    type: object
                  robotVDITemplate:
                    description: RobotVDISpec defines the desired state of RobotVDI
                    properties:
                      ingress:
                        type: boolean
                      nat1to1:
                        description: NAT1TO1 for Neko.
                        type: string
                      privileged:
                        type: boolean
                      resources:
                        description: VDI resource limits.
                        properties:
                          cpu:
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            type: integer
                          memory:
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: ServiceType
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                      webrtcPortRange:
                        pattern: ^([0-9])+-([0-9])+$
                        type: string
                    type: object
                  vdiEnabled:
                    type: boolean
                type: object
              rootDNSConfig:
                description: Root DNS configuration.
                properties:
                  host:
                    description: DNS host.
                    type: string
                required:
                - host
                type: object
              rosBridgeTemplate:
                description: ROS bridge template
                properties:
                  image:
                    type: string
                  ros:
                    properties:
                      distro:
                        description: ROS distro selection. Allowed distros are Foxy
                          and Galactic. It is aimed to support Humble, Melodic and
                          Noetic in further versions.
                        enum:
                        - foxy
                        - galactic
                        - noetic
                        - melodic
                        - humble
                        type: string
                      enabled:
                        type: boolean
                    type: object
                  ros2:
                    properties:
                      distro:
                        description: ROS distro selection. Allowed distros are Foxy
                          and Galactic. It is aimed to support Humble, Melodic and
                          Noetic in further versions.
                        enum:
                        - foxy
                        - galactic
                        - noetic
                        - melodic
                        - humble
                        type: string
                      enabled:
                        type: boolean
                    type: object
                type: object
              storage:
                description: Resource limitations of robot containers.
                properties:
                  amount:
                    default: 10000
                    description: Specifies how much storage will be allocated in total.
                    type: integer
                  storageClassConfig:
                    description: Storage class selection for robot's volumes.
                    properties:
                      accessMode:
                        description: PVC access mode
                        type: string
                      name:
                        description: Storage class name
                        type: string
                    type: object
                type: object
              tlsSecretRef:
                description: TLS secret reference.
                properties:
                  name:
                    description: TLS secret object name.
                    type: string
                  namespace:
                    description: TLS secret object namespace.
                    type: string
                required:
                - name
                - namespace
                type: object
              workspaceManagerTemplate:
                description: Workspace manager template
                properties:
                  updateNeeded:
                    description: Need update
                    type: boolean
                  workspaces:
                    description: Workspace definitions of robot.
                    items:
                      description: Workspace description. Each robot should contain
                        at least one workspace. A workspace should contain at least
                        one repository in it.
                      properties:
                        distro:
                          description: ROS distro selection. Allowed distros are Foxy
                            and Galactic. It is aimed to support Humble, Melodic and
                            Noetic in further versions.
                          enum:
                          - foxy
                          - galactic
                          - noetic
                          - melodic
                          - humble
                          type: string
                        name:
                          description: Name of workspace. If a workspace's name is
                            `my_ws`, it's absolute path is `/home/workspaces/my_ws`.
                          type: string
                        repositories:
                          additionalProperties:
                            description: Repository description.
                            properties:
                              branch:
                                description: Branch of the repository to clone.
                                type: string
                              hash:
                                description: '[Autofilled] Hash of last commit'
                                type: string
                              owner:
                                description: '[Autofilled] User or organization, maintainer
                                  of repository'
                                type: string
                              path:
                                description: '[Autofilled] Absolute path of repository'
                                type: string
                              repo:
                                description: '[Autofilled] Repository name'
                                type: string
                              url:
                                description: Base URL of the repository.
                                type: string
                            required:
                            - branch
                            - url
                            type: object
                          description: Repositories to clone inside workspace's `src`
                            directory.
                          type: object
                      required:
                      - distro
                      - name
                      - repositories
                      type: object
                    minItems: 1
                    type: array
                  workspacesPath:
                    description: Global path of workspaces. It's fixed to `/home/workspaces`
                      path.
                    type: string
                type: object
            required:
            - distributions
            - rmwImplementation
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
